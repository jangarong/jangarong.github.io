{"version":3,"sources":["grr-pi.jpg","stockmarket.jpg","cyc.jpg","navbar.js","old.js","slideshow.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","WebNavbar","Navbar","bg","variant","style","width","Brand","href","Body","className","React","Component","SlideshowDesktop","Carousel","Item","src","thumb1","alt","Caption","height","thumb2","thumb3","SlideshowMobile","Slideshow","handleWindowSizeChange","setState","window","innerWidth","state","addEventListener","this","removeEventListener","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f395b2a0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/grr-pi.9815c0d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stockmarket.a9336369.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cyc.40feab09.jpg\";","import React from 'react';\nimport {Navbar} from 'react-bootstrap';\n\nfunction WebNavbar(){\n\n    return (\n        <div>\n            <Navbar bg=\"dark\" variant=\"dark\" style={{ width: \"auto\" }}>\n                <Navbar.Brand href=\"./index.html\">\n                    Home\n                </Navbar.Brand>\n                <Navbar.Brand href=\"https://www.linkedin.com/in/jangarong/\">\n                    About Me\n                </Navbar.Brand>\n                <Navbar.Brand href=\"https://github.com/jangarong\">\n                    GitHub\n                </Navbar.Brand>\n                <Navbar.Brand href=\"https://www.linkedin.com/in/jangarong/\">\n                    LinkedIn\n                </Navbar.Brand>\n                <Navbar.Brand href=\"https://www.kaggle.com/magichanics\">\n                    Kaggle\n                </Navbar.Brand>\n            </Navbar>\n        </div>\n    );\n}\n\nexport default WebNavbar;","import React from \"react\";\n\nclass Body extends React.Component {\n    render () {\n        return (<div className=\"container-fluid\">\n            <h1>Jan Garong</h1>\n            <i>This is currently a work in process. Stay tuned!</i>\n            <h2>Education</h2>\n            <ul>\n                <li> Computer Science at the University of Toronto Scarborough (Graduating in June 2023)</li>\n            </ul>\n            <h2>Work/Volunteer Experience</h2>\n            <ul>\n                <li>Computer Science Tutor for ICS20 and ICS3U at Holy Trinity Catholic High School (2018-2019)</li>\n                <li>Ottawa International Animation Festival - VR/Workshop Assistant (2019)</li>\n            </ul>\n            <h2>My Projects</h2>\n            <h3>Check Your Calculus (June 2020 - Present)</h3>\n            <ul>\n                <li>Assists students with First Year Calculus concepts.</li>\n                <li>Geared towards those taking MATA31/MATA37 at UTSC.</li>\n                <li>Concepts covers from derivatives and integrals to sequences and series.</li>\n                <li><a href=\"https://jangarong.github.io/CheckYourCalculus/\">Project Website</a></li>\n            </ul>\n            <h3>GRR-Pi (April 2019 - June 2019)</h3>\n            <ul>\n                <li>Autonomous robot that creates maps and landmarks based on found objects.</li>\n                <li>Stores movement in spreadsheet as well as capture images of recognized objects.</li>\n                <li>Recieved the Computer Science award at Holy Trinity Catholic High School for this project and the Works Cited Generator.</li>\n                <li><a href=\"https://github.com/jangarong/GRR-Pi\">GitHub Repo</a></li>\n            </ul>\n            <h3>Amateur Hour - Using Headlines to Predict Stocks (September 2018 - January 2019)</h3>\n            <ul>\n                <li>Predicts stocks based on headline keywords.</li>\n                <li>Part of the Two Sigma Code Competition: Using News to Predict Stock Movements.</li>\n                <li>Recieved 181 forks during the competition.</li>\n                <li><a href=\"https://www.kaggle.com/magichanics/amateur-hour-using-headlines-to-predict-stocks\">Kaggle Notebook</a></li>\n            </ul>\n        </div>);\n    }\n}\nexport default Body;","import React from \"react\";\nimport {Carousel} from \"react-bootstrap\";\nimport thumb1 from \"./grr-pi.jpg\";\nimport thumb2 from \"./stockmarket.jpg\";\nimport thumb3 from \"./cyc.jpg\";\n\n// Issues: box sizes are fixed, so it does not scale with window. Does not look good on mobile.\n\nfunction SlideshowDesktop(){\n    return (\n        <Carousel>\n            <Carousel.Item>\n                <img\n                    className=\"img-responsive img-fluid\"\n                    src={thumb1}\n                    alt=\"GRR-Pi\"\n                />\n                <Carousel.Caption>\n                    <div className=\"shadow-none p-3 mb-5 bg-dark rounded\" style={{\n                        width: '150px',\n                        height: '100px'\n                    }}>\n                        <h3>GRR-Pi</h3>\n                        <p><a href={\"https://github.com/jangarong/GRR-Pi\"}>Read more...</a></p>\n                    </div>\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"img-responsive img-fluid\"\n                    src={thumb2}\n                    alt=\"StockMarket\"\n                />\n                <Carousel.Caption>\n                    <div className=\"shadow-none p-3 mb-5 bg-dark rounded\" style={{\n                        width: '500px',\n                        height: '100px'\n                    }}>\n                        <h3>Stock Predictions with Headlines</h3>\n                        <p><a href={\"https://www.kaggle.com/magichanics/amateur-hour-using-headlines-to-predict-stocks\"}>Read more...</a></p>\n                    </div>\n                </Carousel.Caption>\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"img-responsive img-fluid\"\n                    src={thumb3}\n                    alt=\"CheckYourCalculus\"\n                />\n                <Carousel.Caption>\n                    <div className=\"shadow-none p-3 mb-5 bg-dark rounded\" style={{\n                        width: '400px',\n                        height: '100px'\n                    }}>\n                        <h3>Check Your Calculus</h3>\n                        <p>Currently a work in progress. <a href={\"https://jangarong.github.io/CheckYourCalculus/\"}>Read more...</a></p>\n                    </div>\n                </Carousel.Caption>\n            </Carousel.Item>\n        </Carousel>);\n}\n\nfunction SlideshowMobile(){\n    return (\n        <Carousel>\n            <Carousel.Item>\n                <img\n                    className=\"img-responsive img-fluid\"\n                    src={thumb1}\n                    alt=\"GRR-Pi\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"img-responsive img-fluid\"\n                    src={thumb2}\n                    alt=\"StockMarket\"\n                />\n            </Carousel.Item>\n            <Carousel.Item>\n                <img\n                    className=\"img-responsive img-fluid\"\n                    src={thumb3}\n                    alt=\"CheckYourCalculus\"\n                />\n            </Carousel.Item>\n        </Carousel>);\n}\n\nclass Slideshow extends React.Component{\n\n    // source: https://goshakkk.name/different-mobile-desktop-tablet-layouts-react/\n\n    constructor() {\n        super();\n        this.state = {\n            width: window.innerWidth,\n        };\n    }\n\n    componentWillMount() {\n        window.addEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    // make sure to remove the listener\n    // when the component is not mounted anymore\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleWindowSizeChange);\n    }\n\n    handleWindowSizeChange = () => {\n        this.setState({ width: window.innerWidth });\n    };\n\n    render() {\n        const { width } = this.state;\n        const isMobile = width <= 700;\n        if (isMobile) {\n            return (\n                <SlideshowMobile />);\n        }\n        else {\n            return (\n                <SlideshowDesktop />);\n        }\n    }\n}\n\nexport default Slideshow;","import React from 'react';\nimport './App.css';\nimport WebNavbar from './navbar.js';\nimport Body from './old.js';\nimport Slideshow from './slideshow.js';\n\n// Here are the following issues:\n// When elongated, image stays still and won't scale properly\n// Can move the website to reveal whitespace\n\n// Solution: Your plan is too complicated, maybe do over with a new plan?\n// also fix git while you're at it.\n\nfunction App(){\n\n  return (\n      <div>\n      <WebNavbar />\n          <div className=\"container-fluid\">\n              <div className=\"row no-gutters\">\n              <Slideshow />\n              <Body />\n              </div>\n          </div>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}